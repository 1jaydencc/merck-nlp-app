{"ast":null,"code":"var _jsxFileName = \"/Users/jj/merck-nlp-2/frontend/src/results.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport mockResponse from './mockResponse.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Results(_ref) {\n  _s();\n  let {\n    showResults\n  } = _ref;\n  const [results, setResults] = useState([]);\n  const resultsRef = useRef(null);\n  useEffect(() => {\n    /*\n    async function fetchData() {\n        \n        try {\n            const response = await axios.get('/api/results'); // replace this with your API endpoint\n            setResults(response.data.results);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n     fetchData();\n    */\n    setResults(mockResponse.results);\n    resultsRef.current.scrollIntoView({\n      behavior: 'smooth'\n    }); //scroll to the results\n  }, []);\n  function handleDownload() {\n    const selectedBps = results.filter(bp => bp.selected).map(bp => bp.number);\n    // TODO: send the selectedBps to the backend to download\n  }\n\n  function handleCheckboxChange(bpNumber) {\n    setResults(prevResults => {\n      return prevResults.map(bp => {\n        if (bp.number === bpNumber) {\n          return {\n            ...bp,\n            selected: !bp.selected\n          };\n        } else {\n          return bp;\n        }\n      });\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: resultsRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDownload,\n          style: {\n            marginRight: \"2vw\"\n          },\n          color: \"primary\",\n          children: \" Download Selected Documents \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownload,\n      children: \"Download Selected BP Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), results.map(bp => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: bp.number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"MK Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Species\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Matrix\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Extraction Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Internal Standard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Chromatography\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Polarity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: bp.mk_number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: bp.species\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: bp.matrix\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: bp.extraction_method\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: bp.internal_standard\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: bp.chromatography\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: bp.polarity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: bp.selected,\n                onChange: () => handleCheckboxChange(bp.number)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, bp.number, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Results, \"fI4WEvNsNsDLRSYhB8uEbJN8D5I=\");\n_c = Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","mockResponse","jsxDEV","_jsxDEV","Results","_ref","_s","showResults","results","setResults","resultsRef","current","scrollIntoView","behavior","handleDownload","selectedBps","filter","bp","selected","map","number","handleCheckboxChange","bpNumber","prevResults","ref","children","style","display","justifyContent","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginRight","color","mk_number","species","matrix","extraction_method","internal_standard","chromatography","polarity","type","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/jj/merck-nlp-2/frontend/src/results.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport mockResponse from './mockResponse.json'\n\nexport default function Results({ showResults }) {\n  const [results, setResults] = useState([]);\n  const resultsRef = useRef(null);\n\n  useEffect(() => {\n    /*\n    async function fetchData() {\n        \n        try {\n            const response = await axios.get('/api/results'); // replace this with your API endpoint\n            setResults(response.data.results);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    fetchData();\n    */\n    setResults(mockResponse.results);\n    resultsRef.current.scrollIntoView({ behavior: 'smooth' }); //scroll to the results\n    \n\n  }, []);\n\n  function handleDownload() {\n    const selectedBps = results.filter(bp => bp.selected).map(bp => bp.number);\n    // TODO: send the selectedBps to the backend to download\n  }\n\n  function handleCheckboxChange(bpNumber) {\n    setResults(prevResults => {\n      return prevResults.map(bp => {\n        if (bp.number === bpNumber) {\n          return {\n            ...bp,\n            selected: !bp.selected\n          };\n        } else {\n          return bp;\n        }\n      });\n    });\n  }\n\n  return (\n    <div ref={resultsRef}>\n        <div style={{ display: 'flex', justifyContent: 'space-between'}}>\n                <div>\n                   <h1>Results</h1>\n                </div> \n                <div>\n                    <button onClick={handleDownload} style={{ marginRight: \"2vw\" }} color=\"primary\"> Download Selected Documents </button>\n                </div>\n            </div>\n      <h1>Results</h1>\n      <button onClick={handleDownload}>Download Selected BP Files</button>\n      <hr></hr>\n      {results.map(bp => (\n        <div key={bp.number}>\n          <h2>{bp.number}</h2>\n          <table>\n            <thead>\n              <tr>\n                <th>MK Number</th>\n                <th>Species</th>\n                <th>Matrix</th>\n                <th>Extraction Method</th>\n                <th>Internal Standard</th>\n                <th>Chromatography</th>\n                <th>Polarity</th>\n                <th>Select</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>{bp.mk_number}</td>\n                <td>{bp.species}</td>\n                <td>{bp.matrix}</td>\n                <td>{bp.extraction_method}</td>\n                <td>{bp.internal_standard}</td>\n                <td>{bp.chromatography}</td>\n                <td>{bp.polarity}</td>\n                <td>\n                  <input\n                    type=\"checkbox\"\n                    checked={bp.selected}\n                    onChange={() => handleCheckboxChange(bp.number)}\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <hr></hr>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}